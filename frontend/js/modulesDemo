/*
  Documentation Link: 
  https://nodejs.org/api/
*/

/*
    HTTP Module
*/
const http = require('http');
// createServer - creates webserver with all capabilities of EventEmitter
/*
const server = http.createServer();

//server.on()
console.log("Listening on port 3000...");
server.listen(3000);
*/

const server = http.createServer((req, res) => {
    if (req.url === "/") {
        res.write("Home");
        res.end();
    }
    if (req.url === "/employees") {
        // Converts a JavaScript value to a JavaScript Object Notation (JSON) string.
        res.write(JSON.stringify([{ id: 101, name: 'Raj' }, { id: 102, name: 'Sam' }]));
        res.end();
    }
});


console.log("Listening on port 3000...");
server.listen(3000);


/*
    Event Module
*/
// import 'EventEmitter' class
const EventEmitter = require('events');

// Create EventEmitter Object
const emitter = new EventEmitter();

// Register a listner: Listen for event and execute callback function when event raised.
// emitter.on('myEvent', () => {
//     console.log('myEvent raised');
// })

// // Emit event - produce an event
// emitter.emit('myEvent');

// Note: while emitting event we can send data to listner.
emitter.on('myEvent', (arg) => {
    console.log('myEvent raised', arg); // myEvent raised { id: 1001, name: 'Raj' }
})

// Emit event - produce an event
emitter.emit('myEvent', { id: 1001, name: 'Raj' });



/*
    File System module
*/
// import 'fs' module
const f = require('fs');

// list files & sub directories
const files = f.readdirSync('./');
console.log(files);

// (OR)
f.readdir('c:/temp/123', (err, files) => {
    if (err) console.log('Error', err); //  no such file or directory
    else console.log("Files", files); // Files [ 'dir123', 'greet.txt' ]
})

/*
    os module - Operating Sytem module
*/
// import 'os' module
const o = require('os');

console.log(`Free memory:  ${o.freemem()}`);
console.log(`Total memory: ${o.totalmem}`);
console.log(`Hostname: ${o.hostname}`);
console.log(`Platform: ${o.platform}`); // win32
console.log(`Version: ${o.version}`); //Windows 10 Home Single Language
console.log(`Uptime: ${o.uptime}`);//352068.234 (number of seconds)

